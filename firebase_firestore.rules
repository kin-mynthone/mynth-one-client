rules_version = '2';
service cloud.firestore {
    match /databases/{database}/documents {
        match /visitors/{visitor} {
            allow create: if true;

            allow read: if isAuthenticated();

            allow update: if (isAuthenticated() && isTheVisitorDocOwnerDoingTheUpdateRequest());

            allow delete: if false;
            
            match /savedExhibitors/{exhibitorId} {
                allow create: if isAuthenticated();

                allow read: if isAuthenticated();

                allow update: if false;

                allow delete: if isAuthenticated();
            }
        }

        match /sendbird_users/{sendbirdUser} {
            allow create: if true;

            allow get: if (isAuthenticated() && isTheSendbirdDocOwnerDoingTheGetRequest());
            allow list: if false;

            allow update: if false;

            allow delete: if false;
        }

        match /payment_links/{paymentLink} {
            allow create: if (isAuthenticated() && isThePaymentLinkDocOwnerDoingTheCreateRequest());

            allow read: if false;

            allow update: if (isAuthenticated() && isThePaymentLinkDocOwnerDoingTheUpdateRequest());

            allow delete: if false;
        }

        match /invitation_codes/{invitationCode} {
            allow create: if false;

            allow get: if isAuthenticated();
            allow list: if false;

            allow update: if isAuthenticated();

            allow delete: if false;
        }
        
         match /complimentary_codes/{complimentaryCode} {
            allow create: if false;

            allow get: if isAuthenticated();
            allow list: if false;

            allow update: if isAuthenticated();

            allow delete: if false;
        }

        match /featured_products/{product} {
            allow create: if false;

            allow read: if isAuthenticated();

            allow update: if false;

            allow delete: if false;
        }

        match /exhibitor_accounts/{exhibitorAccount} {
            allow create: if false;

            allow get: if true;
            allow list: if false;

            allow update: if false;

            allow delete: if false;
        }

        match /exhibitors/{exhibitor} {
        
          
            allow create, read, update: if isAuthenticated(); //updated

            allow delete: if false;
            
            match /savedVisitors/{visitorId} {
                allow create: if isAuthenticated();

                allow read: if isAuthenticated();

                allow update: if false;

                allow delete: if isAuthenticated();
            }
        }
        
        match /ratings/{rating} { //added

            allow create,read, update: if isAuthenticated();

        }
        

        match /products/{product} {
            allow create: if false;

            allow read, update: if isAuthenticated(); //updated

            allow delete: if false;
        }

        match /counters/{counterName} {
            allow create: if false;

            allow read: if isAuthenticated();

            allow update: if isAuthenticated();

            allow delete: if false;
        }

        match /meetings/{meeting} {
            allow create: if isAuthenticated();

            allow read: if isAuthenticated();

            allow update: if isAuthenticated();

            allow delete: if false;
        }
        

        function isAuthenticated(){
            return request.auth != null;
        }

        function isTheSendbirdDocOwnerDoingTheGetRequest(){
            let userDoingTheGetRequestUid = request.auth.uid;
            let documentUserIdField = resource.data.user_id;
            return userDoingTheGetRequestUid == documentUserIdField;
        }

        function isThePaymentLinkDocOwnerDoingTheCreateRequest(){
            let userDoingTheCreateRequestUid = request.auth.uid;
            let incomingDocumentGeneratedByField = request.resource.data.generated_by;
            return userDoingTheCreateRequestUid == incomingDocumentGeneratedByField;
        }

        function isThePaymentLinkDocOwnerDoingTheUpdateRequest(){
            let userDoingTheUpdateRequestUid = request.auth.uid;
            let savedDocumentGeneratedByField = resource.data.generated_by;
            return userDoingTheUpdateRequestUid == savedDocumentGeneratedByField;
        }

        function isTheVisitorDocOwnerDoingTheUpdateRequest(){
            let userDoingTheUpdateRequestUid = request.auth.uid;
            let documentUidField = resource.data.uid;
            return userDoingTheUpdateRequestUid == documentUidField;
        }
    }
}

// To deploy rules, just run firebase deploy --only firestore:rules